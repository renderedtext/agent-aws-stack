version: v1.0
name: Main pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

# We still don't have a way to programatically create agent types, so we need to share the same agent type.
# To avoid running into issues where different pipelines might be doing something different things to the
# same stack at the same time, we use a queue.
queue:
  name: Testing
  scope: project

blocks:
  - name: Install dependencies
    dependencies: []
    task:
      env_vars:
        - name: NODE_ENV
          value: test
        - name: CI
          value: 'true'
      jobs:
        - name: npm install and cache
          commands:
            - checkout
            - nvm use
            - node --version
            - npm --version
            - cache restore
            - npm install
            - cache store

  - name: Lint & Test
    dependencies:
      - Install dependencies
    task:
      env_vars:
        - name: NODE_ENV
          value: test
        - name: CI
          value: 'true'
      jobs:
        - name: Lint ansible recipes
          commands:
            - sudo apt-get -y install python3-venv
            - checkout
            - cache restore venv-$SEMAPHORE_GIT_BRANCH-$(checksum requirements.txt)
            - make ansible.lint
            - cache store venv-$SEMAPHORE_GIT_BRANCH-$(checksum requirements.txt) venv
        - name: Unit tests
          commands:
            - checkout
            - nvm use
            - node --version
            - npm --version
            - cache restore
            - npm test

  - name: Build
    dependencies:
      - Lint & Test
    task:
      secrets:
        - name: agent-aws-stack-tester-credentials
      prologue:
        commands:
          - checkout
          - cache restore venv-$SEMAPHORE_GIT_BRANCH-$(checksum requirements.txt)
          - sudo apt-get update && sudo apt-get -y install python3-venv
          - curl -sL https://releases.hashicorp.com/packer/1.7.9/packer_1.7.9_linux_amd64.zip -o /tmp/packer_1.7.9_linux_amd64.zip
          - unzip /tmp/packer_1.7.9_linux_amd64.zip -d /tmp/
          - sudo mv /tmp/packer /usr/local/bin/
      jobs:
        - name: Build Linux AMI
          commands:
            - ./ci/build-ami.sh ubuntu-focal x86_64
        - name: Build Windows AMI
          commands:
            - ./ci/build-ami.sh windows x86_64

  - name: Bootstrap
    dependencies:
      - Build
    task:
      secrets:
        - name: agent-aws-stack-tester-credentials
      jobs:
        - name: Bootstrap stack
          commands:
            - checkout
            - cache restore
            - ./ci/create-execution-policy-and-bootstrap.sh $AWS_ACCOUNT_ID $AWS_DEFAULT_REGION

  - name: Linux launch
    dependencies:
      - Bootstrap
    task:
      secrets:
        - name: s1-agent-aws-stack-linux-token
        - name: agent-aws-stack-tester-credentials
      jobs:
        - name: Launch stack
          commands:
            - checkout
            - cache restore
            - ./ci/create-ssm-param.sh s1-agent-aws-stack-linux-token $TOKEN
            - SEMAPHORE_AGENT_STACK_CONFIG=./ci/linux-config.json npm run deploy:ci

  - name: Windows launch
    dependencies:
      - Bootstrap
    task:
      secrets:
        - name: s1-agent-aws-stack-windows-token
        - name: agent-aws-stack-tester-credentials
      jobs:
        - name: Launch stack
          commands:
            - checkout
            - cache restore
            - ./ci/create-ssm-param.sh s1-agent-aws-stack-windows-token $TOKEN
            - SEMAPHORE_AGENT_STACK_CONFIG=./ci/windows-config.json npm run deploy:ci

  - name: Linux tests
    dependencies:
      - Linux launch
    execution_time_limit:
      minutes: 10
    task:
      agent:
        machine:
          type: s1-agent-aws-stack-linux
      epilogue:
        always:
          commands:
            - if [ -f results.xml ]; then test-results publish results.xml; fi
      jobs:
        - name: Run goss tests
          commands:
            - sudo curl -L https://github.com/aelsabbahy/goss/releases/latest/download/goss-linux-amd64 -o /usr/local/bin/goss
            - sudo chmod +rx /usr/local/bin/goss
            - checkout
            - goss -g goss/goss.yaml --vars goss/vars.yml validate --max-concurrent 1 --format junit > results.xml

  - name: Windows tests
    dependencies:
      - Windows launch
    execution_time_limit:
      minutes: 30
    task:
      agent:
        machine:
          type: s1-agent-aws-stack-windows
      jobs:
        - name: Run commands
          commands:
            - cache
            - checkout
            - Write-Output 'hello'

after_pipeline:
  task:
    secrets:
      - name: agent-aws-stack-tester-credentials
    jobs:
      - name: Submit Reports
        commands:
          - test-results gen-pipeline-report
      - name: Destroy Linux stack
        commands:
          - checkout
          - cache restore
          - SEMAPHORE_AGENT_STACK_CONFIG=./ci/linux-config.json npm run destroy:ci
      - name: Destroy Windows stack
        commands:
          - checkout
          - cache restore
          - SEMAPHORE_AGENT_STACK_CONFIG=./ci/windows-config.json npm run destroy:ci